FORMAT: 1A
HOST: http://localhost:5000

# PWP Forum App

The discussion forum Web API offers different functionalities to structure non-real-time conversations among the people 
of a group about topics they are interested in certain topic. User can register in the application to share their personal
information with other users. Users can create new message or reply to message sent by other users. 


# Group Profiles

## Message Profile [/profiles/message_profile]

Profile definition for all messages related resources.

### Dependencies

This profile inherits:
 * Some semantic descriptors from http://schema.org/Article
 * It inherits the `template` property from [Collection+JSON](http://amundsen.com/media-types/collection/format/). 
 * Some link  relations from IANA Web linking [RFC5988](http://www.iana.org/assignments/link-relations/link-relations.xhtml)
 * Some link relations from [RFC4685: Atom threading extensions](https://www.ietf.org/rfc/rfc4685.txt).

### Link relations

 * `users-all`:  This action list all users registered in the forum. Each item is an instance of the type User defined in the profile [User Profile](resource/profiles/user-profile). Can only be accessible with GET.
 * `messages-all`:  This action list all messages in the forum. Each item is an instance of the type Message defined in this profile. Can only be accessed through GET.
 * `reply`: This action is utilized to create a reply message to the message embedded in the href. It must be activated with a POST. The format
    of the request is obtained from the template property of the collection attribute. 
 
Inherited from [IANA RFC5988](http://www.iana.org/assignments/link-relations/link-relations.xhtml)
 * `author`: See [author](https://www.w3.org/TR/html5/links.html#link-type-author). The href might be null when a message does not have a recognized author. Only accessible through GET.
 * `collection`: See [collection](http://tools.ietf.org/html/rfc6573). Only accessible through GET.
 
Inherited from [RFC4685](https://www.rfc-editor.org/rfc/rfc4685.txt)
 * `in-reply-to` See [Atom Threading Extensions](https://tools.ietf.org/html/rfc4685#page-2). It indicates that an entry is a response to another resource. The href might be null if this is the root message in a thread. Only accessible through GET. 

### Semantic Descriptors

#### Data Type Message

 * `author` (string): Nickname of a message's author. The system will use Anonymous by default. Mandatory in representations in which a new message is generated.
 * `editor` (string): Nicname of a user who last edited a message. Mandatory in representations in which a message is edited. 

Inherited from [schema.org/Article](http://schema.org/Article)
 * `articleBody`(string): See [http://schema.org/articleBody](http://schema.org/articleBody)
 * `headline` (string): See[http://schema.org/headline](http://schema.org/headline)
 
Inherited from [Collection+JSON](http://amundsen.com/media-types/collection/format/) media type and its extensions: template validation extension and value-types extension
 * `template` (object): The template object contains all the input elements used to add a new message as a reply of the context IRI (using the POST method) or to modify the context IRI itself (using PUT method)

### GET

Return the Message Profile in HTML format
+ Response 200 (text/html)


## Error Profile [/profiles/error_profile]

Profile definition for all errors messages in the system

+ Attributes 
    + title (string, required) - A short description of the error
    + message (string, required) - A detailed description of the error
    + resource_url (string, required) - A url of the resource generating the error
    + resource_type (string, required) - The name of the resource generating the error
    

### GET

Return the Error Profile in HTML format
+ Response 200 (text/html)

## User Profile [/url_to_be_defined_by_students]

__TO BE DEFINED BY STUDENTS__

# Group Messages

All these resources use the [Message Profile](reference/profiles/message-profile).

In addition all error messages follow the profile defined [Error Profile](reference/profiles/error-profile)

## Messages List [/forum/api/messages]

A list of all messages in the Forum. For the sake of simplicity we do not include message topics. 

### List messages [GET]

Get a list of all users in the system

+ Relation: self    
+ Request
    
    + Headers
    
            Accept: application/vnd.collection+json
    
+ Response 200 (application/vnd.collection+json)

    The response uses the [Collection+JSON](http://amundsen.com/media-types/collection/) media type. 
    In addition it uses following extensions:
    * [template validation extension](https://github.com/mamund/collection-json/blob/master/extensions/template-validation.md)
    * [value-types extension](https://github.com/mamund/collection-json/blob/master/extensions/value-types.md)
    
   
    + Body 
    
            {
                "collection": {
                    "href": "/forum/api/messages/", 
                    "items": [
                        {
                            "href": "/forum/api/messages/msg-21/",
                            "data": [
                                {"name": "headline", "value": "Do not use IE"}
                            ],
                            "links": []
                        }, 
                        {
                            "href": "/forum/api/messages/msg-17/", 
                            "data": [
                                {"name": "headline", "value": "Try hello"}
                            ],
                            "links": []
                        }
                    ],
                    "version": "1.0",
                    "template": {
                        "data": [
                            {"required": true, "prompt": "", "name": "headline", "value": ""},
                            {"required": true, "prompt": "", "name": "articleBody", "value": ""},
                            {"required": false, "prompt": "", "name": "author", "value": ""},
                            {"required": false, "prompt": "", "name": "editor", "value": ""}
                        ]
                    },
                    "links": [
                        {"href": "/forum/api/users/", "prompt": "List of all users in the Forum", "rel": "users-all"}
                    ]
                }
            }
    
### Create a new message initiating a thread [POST]       

Create a new message, utilized as a parent thread. 

If the attribute `author` is not included the system will consider it as `Anonymous` user. 

+ Request (application/vnd.collection+json)

    + Headers
    
            Accept: application\json
        
    + Body 
    
            {
                "template": {
                    "data": [
                        {"name": "headline", "value": "Do not use IE"},
                        {"name": "articleBody", "value": "Do not try to fix what others broke"},
                        {"name": "author", "value": "HockeyFan"}
                    ]
                }
            }

+ Response 201

    The message is created correctly. 
        
    + Headers
                
            Location: URL of the new created resource

+ Response 400 (application/json)

    The message is not well formed. Some of the parameters is not correctly received. 
    
    + Body
    
            {
                "message": "Be sure you include message title and body",
                "resource_type":["messages"],
                "resource_url": "/forum/api/messages/",
                "title": "Wrong request format"
            }

+ Response 415 (application/json)

    The server cannot understand the format of the response.
    
    + Body 
    
            {
                "message": "Use a JSOn compatible format",
                "resource_type":"messages",
                "resource_url": "/forum/api/messages/",
                "title": "Unsupported media type"
            }


+ Response 500  (application/json)

    The server cannot store the message in the database.
    
    + Body 
    
            {
                "message": "Cannot access the database",
                "resource_type":"messages",
                "resource_url": "/forum/api/messages/",
                "title": "Problem with the database"
            }
            
## Message [/forum/api/messages/{messageid}]

A message stored in the Forum database. A message contains a title which describes the information of the message,
the body (the message itself), information about the sender and a unique id that identifies this message in the database.
Some messages might contain links to other messages (one message is the reply of another).

+ Parameters 
    + messageid: `msg-1` (string)   - The id of the new message. Using regex syntax this parameter follows format: msg-\d+

### Receive message information [GET]

Receives the information of a particular message

+ Relation: self
+ Request
    
    + Headers
    
            Accept: application/hal+json
    
+ Response 200 (application/hal+json)

    Message correctly retrieved

    + Body 
    
            {
                "articleBody": "I am using a float layout on my website but I've run into some problems with Internet Explorer. I have set the left margin of a float to 100 pixels, but IE uses a margin of 200px instead. Why is that? Is this one of the many bugs in IE?",
                "author": "AxelW",
                "headline": "CSS: Margin problems with IE",
                "editor": null,
                "_links":{
                    "curies":[
                        {
                            "href": "/profiles/message_profile",
                            "name": "msg"
                        },
                        {
                            "href": "https://tools.ietf.org/html/rfc4685",
                            "name": "atom-thread"
                        }
                    ],
                    "self":{
                        "profile": "/profiles/message_profile",
                        "href": "/forum/api/messages/msg-1/"
                    },
                    "msg:author":{
                        "profile": "/profiles/user_profile",
                        "href": "/forum/api/users/AxelW/",
                        "type": "application/hal+json"
                    },
                    "msg:reply": {
                        "profile": "/profiles/message_profile",
                        "href": "/forum/api/messages/msg-1",
                    },
                    "atom-thread:in-reply-to":{
                        "profile": "/profiles/message_profile",
                        "href": null,
                        "type": "application/hal+json"
                    },
                    "collection":{
                        "profile": "/profiles/message_profile",
                        "href": "/forum/api/messages/",
                        "type": "application/vnd.collection+json"
                    }
                },
               "template": {
                    "data": [
                        {"required": true, "prompt": "", "name": "headline", "value": ""},
                        {"required": true, "prompt": "", "name": "articleBody", "value": ""},
                        {"required": false, "prompt": "", "name": "author", "value": ""},
                        {"required": false, "prompt": "", "name": "editor", "value": ""}
                    ]
                }
            }

+ Response 404 (application/json)

    The message with id `messageid` does not exist in the database.
        
    + Body 
    
            {
                "message": "There is no a message with id msg-1",
                "resource_type":"message",
                "resource_url": "/forum/api/messages/msg-1",
                "title": "Message does not exist"
            }

### Delete a message [DELETE]

Delete a message from the system

+ Request
    
    + Headers
    
            Accept: application/hal+json
    
+ Response 204

    The message was successfully deleted
        
    + Body 
        

+ Response 404 (application/json)

    The message with id `messageid` does not exist in the database.
        
    + Body 
    
            {
                "message": "There is no a message with id msg-1",
                "resource_type":"message",
                "resource_url": "/forum/api/messages/msg-1",
                "title": "Message does not exist"
            }

### Edit a message [PUT]       

Edit the information of a message. The field  `editor` should be included, otherwise the system answers with status code 404.

+ Request (application/vnd.collection+json)

    + Headers
    
            Accept: application\json
        
    + Body 
    
            {
                "template": {
                    "data": [
                        {"name": "headline", "value": "Do not use IE"},
                        {"name": "articleBody", "value": "Do not try to fix what others broke"},
                        {"name": "author", "value": "HockeyFan"},
                        {"name": "editor", "value": "HockeyFan"}
                    ]
            }

+ Response 204

    The message is modified correctly
        
    + Body

+ Response 400 (application/json)

    The message is not well formed. Some of the parameters is not correctly received. 
    
    + Body
    
            {
                "message": "Be sure you include message title and body",
                "resource_type":["messages"],
                "resource_url": "/forum/api/messages/",
                "title": "Wrong request format"
            }

+ Response 404 (application/json)

    The message with id `messageid` does not exist in the database.
        
    + Body 
    
            {
                "message": "There is no a message with id msg-1",
                "resource_type":"message",
                "resource_url": "/forum/api/messages/msg-1",
                "title": "Message does not exist"
            }

+ Response 415 (application/json)

    The server cannot understand the format of the response.
    
    + Body 
    
            {
                "message": "Use a JSOn compatible format",
                "resource_type":"messages",
                "resource_url": "/forum/api/messages/",
                "title": "Unsupported media type"
            }


+ Response 500 (application/json)

    The server cannot store the message in the database.
    
    + Body 
    
            {
                "message": "Cannot access the database",
                "resource_type":"messages",
                "resource_url": "/forum/api/messages/",
                "title": "Problem with the database"
            }

### Reply an existing message [POST]       

Create a new message replying the message with id `messageid`. 
If the attribute `author` is not included the system will consider it as `Anonymous` user. 

+ Relation: reply
+ Request (application/vnd.collection+json)

    + Headers
    
            Accept: application\json
        
    + Body 
    
            {
                "template": {
                    "data": [
                        {"name": "headline", "value": "Do not use IE"},
                        {"name": "articleBody", "value": "Do not try to fix what others broke"},
                        {"name": "author", "value": "HockeyFan"}
                    ]
            }

+ Response 201

    The message is created correctly. 
        
    + Headers
                
            Location: URL of the new created resource

+ Response 400 (application/json)

    The message is not well formed. Some of the parameters is not correctly received. 
    
    + Body
    
            {
                "message": "Be sure you include message title and body",
                "resource_type":["messages"],
                "resource_url": "/forum/api/messages/",
                "title": "Wrong request format"
            }

+ Response 404 (application/json)

    The message with id `messageid` does not exist in the database.
        
    + Body 
    
            {
                "message": "There is no a message with id msg-1",
                "resource_type":"message",
                "resource_url": "/forum/api/messages/msg-1",
                "title": "Message does not exist"
            }

+ Response 415 (application/json)

    The server cannot understand the format of the response.
    
    + Body 
    
            {
                "message": "Use a JSOn compatible format",
                "resource_type":"messages",
                "resource_url": "/forum/api/messages/",
                "title": "Unsupported media type"
            }


+ Response 500 (application/json)

    The server cannot store the message in the database.
    
    + Body 
    
            {
                "message": "Cannot access the database",
                "resource_type":"messages",
                "resource_url": "/forum/api/messages/",
                "title": "Problem with the database"
            }

#Group Users
All these resources use [User Profile](reference/profiles/user_profile).

In addition all error messages follow the profile defined [Error Profile](reference/profiles/error_profile)

## Users List [/api/users]

A list of all the users registered in the Forum.

### List users [GET]

Get a list of all users in the system
    
+ Request
    
    + Headers
    
            Accept: application/vnd.collection+json
    
+ Response 200 (application/vnd.collection+json)

    The response uses the [Collection+JSON](http://amundsen.com/media-types/collection/) media type. 
    In addition it uses following extensions:
    * [template validation extension](https://github.com/mamund/collection-json/blob/master/extensions/template-validation.md)
    * [value-types extension](https://github.com/mamund/collection-json/blob/master/extensions/value-types.md)
    * [read-only](https://github.com/collection-json/extensions/blob/master/read-only.md)
    
    + Body 
    
            {
                "collection":{
                    "href": "/forum/api/users/",
                    "version": "1.0", 
                    "items": [
                        {
                            "href": "/forum/api/users/Mystery/",
                            "data": [   
                                {"name": "nickname", "value": "Mystery"}, 
                                {"name": "registrationdate", "value": 1362015937}
                            ], 
                            "links": [
                                {"href": "/forum/api/users/Mystery/history/", "prompt": "History of user", "name": "history", "rel": "messages"}
                            ], 
                            "read-only": true
                        }, 
                        {
                            "href": "/forum/api/users/AxelW/", 
                            "data": [
                                {"name": "nickname", "value": "AxelW"},
                                {"name": "registrationdate", "value": 1357724086}
                            ],
                            "links": [
                                {"href": "/forum/api/users/AxelW/history/", "prompt": "History of user", "name": "history", "rel": "messages"}
                            ], 
                            "read-only": true
                        }
                    ],
                    "links": [
                        {"href": "/forum/api/messages/", "prompt": "List of all messages in the Forum", "rel": "messages-all"}
                    ],
                    "template": {
                        "data": [
                            {"required": true, "prompt": "Insert nickname", "name": "nickname", "value": ""},
                            {"object": {}, "prompt": "Insert user address", "name": "address", "required": false},
                            {"required": true, "prompt": "Insert user avatar", "name": "avatar", "value": ""},
                            {"required": true, "prompt": "Insert user birthday", "name": "birthday", "value": ""},
                            {"required": true, "prompt": "Insert user email", "name": "email", "value": ""},
                            {"required": true, "prompt": "Insert user familyName", "name": "familyName", "value": ""},
                            {"required": true, "prompt": "Insert user gender", "name": "gender", "value": ""},
                            {"required": true, "prompt": "Insert user givenName", "name": "givenName", "value": ""},
                            {"required": false, "prompt": "Insert user image", "name": "image", "value": ""},
                            {"required": true, "prompt": "Insert user signature", "name": "signature", "value": ""},
                            {"required": false, "prompt": "Insert user skype", "name": "skype", "value": ""},
                            {"required": false, "prompt": "Insert user telephone", "name": "telephone", "value": ""},
                            {"required": false, "prompt": "Insert user website", "name": "website", "value": ""}
                        ]
                    },
                }
            }
    
### Register a user [POST]       

Create a new user. Note that in the example the properties telephone, skype and image are not included in the request example.

+ Request (application/vnd.collection+json)

    Note that in the example the properties `telephone`, `skype` and `image` are not included in the request example.

    + Headers
    
            Accept: application\json
        
    + Body 
    
            {   
                "template" : {
                    "data" : [
                        {"prompt" : "Insert user address", "name" : "address", "object" : {"addressLocality":"Palencia", "addressCountry":"Spain"}},
                        {"prompt" : "Insert user avatar", "name" : "avatar", "value" : "file2.jpg"},
                        {"prompt" : "Insert user birthday", "name" : "birthday", "value" : "1990-10-12"},
                        {"prompt" : "Insert user email", "name" : "email", "value" : "john@notanyone.com"},
                        {"prompt" : "Insert user familyName", "name" : "familyName", "value" : "DonNadie"},
                        {"prompt" : "Insert user gender", "name" : "gender", "value" : "male"},
                        {"prompt" : "Insert user givenName", "name" : "givenName", "value" : "John", "required":true},
                        {"prompt" : "Insert user signature", "name" : "signature", "value" : "What is born in Palencia stays in Palencia"},
                        {"prompt" : "Insert user website", "name" : "website", "value" : "http://nothingisnothin.com"}
                    ]
                }
            }

+ Response 201

    The user is created correctly. 
        
    + Headers
                
            Location: URL of the new created resource

+ Response 400 (application/json)

    The message is not well formed. Some of the parameters is not correctly received. 
    
    + Body
    
            {
                "message": "Be sure you include all mandatory properties",
                "resource_type":"users",
                "resource_url": "/forum/api/users/",
                "title": "Wrong request format"
            }

+ Response 409 (application/json)

    Exists a user when the same nickname
    
    + Body
    
            {
                "message": "There is already a user with same nickname: AxelW",
                "resource_type":"users",
                "resource_url": "/forum/api/users/",
                "title": "Wrong nickname"
            }

+ Response 415 (application/json)

    The server cannot understand the format of the response.
    
    + Body 
    
            {
                "message": "Use a JSOn compatible format",
                "resource_type":"users",
                "resource_url": "/forum/api/users/",
                "title": "Unsupported media type"
            }


+ Response 500 (application/json)

    The server cannot store the user in the database.
    
    + Body 
    
            {
                "message": "Cannot access the database",
                "resource_type":"users",
                "resource_url": "/forum/api/users/",
                "title": "Problem with the database"
            }

## User [/to_be_defined_by_students]

A user is a member of the Forum. A user can send messages to the Forum. Each user has a unique nickname that serves as a unique identifier in the system. 
One user cannot register using an existing nickname. Anyone can register in the Forum to become a user. 

The user profile information is splitted in two different resources [User's public profile](reference/users/users-public-profile) and [User's private profile](references/users/users-private-profile) 

Note that a user is read-only in the [Users](reference/users/users-list) collection. Hence, it cannot be modified nor deleted unless the corresponding link relation is included in the body of the user.

__THE REST SHOULD BE COMPLETED BY STUDENTS__


## User's public profile [/api/users/{nickname}/public_profile]

Users information visible to everybody. Only authorized users can modify this information.

+ Parameters 
    + nickname: `AxelW` (string)   - The nickname of the user

### Get user's public profile [GET]

+ Response 501
    
        TO BE DEFINED

### Modify user's public profile [PUT]

+ Request 

        TO BE DEFINED

+ Response 501

        TO BE DEFINED

## User's private profile  [/api/users/{nickname}/restricted_profile/]

Users information only visible to forum administration staff. Only user itself and administrators can modify this information.

+ Parameters 
    + nickname: `AxelW` (string)   - The nickname of the user

### Get user's restricted profile [GET]

+ Response 501
    
        TO BE DEFINED

### Modify user's restricted profile [PUT]

+ Request 

        TO BE DEFINED

+ Response 501

        TO BE DEFINED

## User's history [/api/users/{nickname}/history{?length,before,after}]

List of messages sent by a user. It is the result of an algorithm which searches the messages sent by a specific user.
The algorithm might receive 3 arguments to filter the results: the amount of messages to return, a date to remove all messages before it  and a date to remove all messages after it. 

+ Parameters 
    + nickname: `AxelW` (string)   - The nickname of the user
    + length: 2 (integer, optional) - Maximum number of messages to be returned
    + before: 1456936437  (long, optional) - Return all messages sent before this timestamp.
    + after: 1456936437  (long, optional) - Return all messages sent after this timestamp.

### List users [GET]

Get a list of all users in the system
    
+ Request
    
    + Headers
    
            Accept: application/vnd.collection+json
    
+ Response 200 (application/vnd.collection+json)

    The response uses the [Collection+JSON](http://amundsen.com/media-types/collection/) media type. 
    
    + Body 
    
            {
                "collection":
                    {
                        "version" : "1.0",
                        "href" : "/forum/api/users/AxelW/history/",
                        "items" : [
                              { "href" : "/forum/api/messages/msg-1/",
                                "data" : [
                                  { "name" : "headline", "value" : "CSS: Margin problems with IE" },
                                ],
                                "links" : []
                              },
                              { "href" : "/forum/api/messages/msg-17/",
                                "data" : [
                                  { "name" : "headline", "value" : "Try hello" },
                                ],
                                "links" : []
                              }
                        ],
                        "links" : [
                          {"href" : "/forum/api/messages/", "rel" : "messages-all", "prompt" : "Messages in Forum"},
                          {"href" : "/forum/api/users/AxelW/", "rel" : "author", "prompt" : "User information who sent this message"},
                         
                        ],
                        "queries" : [
                            {
                              "href" : "/forum/api/users/AxelW/history/",
                              "rel" : "search",
                              "prompt": "Search in the history",
                              "data" : [
                                {"prompt" : "Return the messages published after this timestamp", "name" : "after", "value" : "", "required":false},
                                {"prompt" : "Return the messages published before this timestamp", "name" : "before", "value" : "", "required":false},
                                {"prompt" : "Limit the number of messages returned", "name" : "length", "value" : "", "required":false},
                              ]
                            }
                          ] 
                }
            }

+ Response 404 (application/json)

    There is no message with given conditions 
        
    + Body 
    
            {
                "message": "Cannot find any message with the given restrictions",
                "resource_type":"history",
                "resource_url": "/forum/api/users/AxelW/history",
                "title": "Empty list"
            }


